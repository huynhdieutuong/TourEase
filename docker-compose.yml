version: '3.7'
services:
#database section

    #TourDB: sql server
    tourdb:
        image: mcr.microsoft.com/mssql/server:2019-latest
        container_name: tourdb
        environment:
            SA_PASSWORD: "Passw0rd!"
            ACCEPT_EULA: "Y"
        restart: always
        volumes:
            - /var/lib/mssql/data
        ports:
            - "1435:1433"

    #TourCache: Redis
    tourcache:
          image: redis:alpine
          container_name: tourcache
          restart: always
          ports: 
            - "6380:6379"

    #TourSearchDB: mongodb
    toursearchdb:
        image: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=mongopw
        container_name: toursearchdb
        restart: always
        ports:
            - "27018:27017"
        volumes:
            - /var/lib/mongodb/data

    #TourApplicationDB: mysql
    tourapplicationdb:
        image: mysql
        container_name: tourapplicationdb
        environment:
            MYSQL_ROOT_PASSWORD: "Passw0rd!"
            MYSQL_TCP_PORT: 3306
            MYSQL_DATABASE: TourApplication
        restart: always
        volumes:
            - /var/lib/mysql
        ports:
            - "3307:3306"

    #IdentityServerDB: postgres
    identitydb:
        image: postgres
        environment:
            - POSTGRES_PASSWORD=postgrespw
        container_name: identitydb
        restart: always
        ports:
            - 5432:5432
        volumes:
            - /var/lib/postresql/data

#infrastructure section
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        restart: always
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - /var/lib/rabbitmq/data
        hostname: rabbitmq

#api section
    # Tour API
    tourapi:
        image: tuonghuynh/tourapi:latest
        container_name: tour.api
        build:
            context: .
            dockerfile: src/Services/Tour/Tour.API/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ASPNETCORE_URLS=http://+:7777
            - DatabaseSettings:ConnectionString=Server=tourdb;Database=TourDb;User Id=sa;Password=Passw0rd!;TrustServerCertificate=True
            - CacheSettings:ConnectionString=tourcache,abortConnect=false
            - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq
            - IdentitySettings:IdentityServiceUrl=http://identityserver
            - Kestrel:Endpoints:Grpc:Protocols=Http2
            - Kestrel:Endpoints:Grpc:Url=http://+:7777
            - Kestrel:Endpoints:WebApi:Protocols=Http1
            - Kestrel:Endpoints:WebApi:Url=http://+:80
        ports:
            - 7001:80
            - 7777:7777
        depends_on:
            - tourdb
            - tourcache
            - rabbitmq

    # TourSearch API
    toursearchapi:
        image: tuonghuynh/toursearchapi:latest
        container_name: toursearch.api
        build:
            context: .
            dockerfile: src/Services/TourSearch/TourSearch.API/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - MongoDbSettings:ConnectionString=mongodb://root:mongopw@toursearchdb
            - MongoDbSettings:DatabaseName=TourSearch
            - ServiceUrls:TourUrl=http://tourapi
            - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq
        ports:
            - 7002:80
        depends_on:
            - toursearchdb
            - rabbitmq

    # TourApplication API
    tourapplicationapi:
        image: tuonghuynh/tourapplicationapi:latest
        container_name: tourapplication.api
        build:
            context: .
            dockerfile: src/Services/TourApplication/TourApplication.API/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings:MySqlConnection=server=tourapplicationdb;port=3306;database=TourApplication;user=root;password=Passw0rd!;
            - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq
            - IdentitySettings:IdentityServiceUrl=http://identityserver
            - GrpcTourJob=http://tourapi:7777
        ports:
            - 7003:80
        depends_on:
            - tourapplicationdb
            - rabbitmq

    # IdentityServer
    identityserver:
        image: tuonghuynh/identityserver:latest
        container_name: identityserver
        build:
            context: .
            dockerfile: src/Services/Identity/IdentityServer/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings:DefaultConnection=Server=identitydb;User Id=postgres;Password=postgrespw;Database=identity
        ports:
            - 5001:80
        depends_on:
            - identitydb

    # Api Gateway
    apigateway:
        image: tuonghuynh/apigateway:latest
        container_name: apigateway
        build:
            context: .
            dockerfile: src/ApiGateways/YarpApiGw/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
        ports:
            - 6001:80

# network section
networks:
    default:
        name: tour_ease
        driver: bridge

#volumes section
# volumes:
#     sqlserver_data:
#         name: sqlserver_data
#     mongo_data:
#         name: mongo_data
#     rabbitmq_data:
#         name: rabbitmq_data